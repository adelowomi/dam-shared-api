name: Build Image and Deploy to Beanstalk
on:
  push:
    branches: [development]
    tags: ['v.*.*.*']

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID}}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY}}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Native docker ECR login
        id: docker-ecr-login
        run: result=$(aws ecr get-login-password --region ${{env.AWS_REGION}} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }})
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Copy file from S3
        run: aws s3 cp ${{secrets.APP_CONFIG_S3_PATH_STG}} .env

      - name: Build Docker Image
        run: ./.github/scripts/build_and_publish_image.sh ${{env.ECR_REGISTRY}}
      - name: Persist Tag
        uses: actions/upload-artifact@v3
        with:
          name: tag-file
          path: workspace/tag_name.txt
  deploy:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: tag-file
      - name: Deploy to Elastic Beanstalk
        run: ./.github/scripts/deploy_to_eb.sh ${{secrets.STG_ENVIRONMENT}} ${{secrets.STG_APPLICATION}} ${{secrets.AWS_REGION}} ${{env.ECR_REGISTRY}}

        # trigger deployment o development branch